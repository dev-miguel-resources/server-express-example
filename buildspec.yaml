version: 0.2

phases:
   pre_build:
      commands:
         - echo Logging into AWS ECR # mensaje del proceso para el acceso a ECR AWS
         - aws --version # identificación de la versión de aws
         - REPOSITORY_URI=619467781629.dkr.ecr.us-east-2.amazonaws.com/cursonodesaturday # identificador del path de la imagen el repo del ECR
         - aws ecr get-login-password | docker login --username AWS --pasword-stdin ${REPOSITORY_URI} # acá me autentico de cara al ECR
         - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7) # imprime el commit en le flujo de CI/CD y le agrega un identificador de proceso
         - IMAGE_TAG=$(COMMIT_HASH:=lastest) # cual es el tag que le queremos dar a la imagen

   build:
      commands:
         - echo Build started on `date` # aquí ocupamos la función de fecha del code build
         - echo Building the docker image # mensaje de construcción de la imagen de docker
         - docker build -t $REPOSITORY_URI:latest . # construcción de la imagen mediante el Dockerfile
         - aws s3 cp s3://mybucketsaturday/prd-saturday/.env .env
         - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG # creo una copia de la imagen a partir de la actual como respaldo

   post_build:
      commands:
         - echo Build completed on `date` # aquí ocupamos la función de fecha de finalización del build
         - echo Pushing the docker image # vamos a subir la imagen de docker
         - docker push $REPOSITORY_URI:latest # subo la imagen al repositorio
         - docker push $REPOSITORY_URI:$IMAGE_TAG # subo la imagen de respaldo al repositorio

artifacts:
   files:
      - 'Dockerrun.aws.json' # archivo adjunto de configuración para generar el contenedor de acuerdo a nuestra imagen
